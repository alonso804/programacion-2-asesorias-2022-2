#include<iostream>
#include<vector>
#include<fstream>

#include"prettyprint.hpp"

//cout=ostream->consola
//file=fstream->archivo

//ios::in=lectura
//ios::out=escriturasobreescribir
//ios::app=escrituraagregar

#definedeb(x)cout<<#x<<":"<<x<<endl;
#defineFOR(i,a,b)for(inti=(a);i<(b);i++)

usingnamespacestd;

classPersona;

voidwriteCsv(constvector<Persona*>&,conststring&);

vector<Persona*>readCsv(conststring&);

vector<string>split(conststring&,constchar&);

ostream&operator<<(ostream&,constPersona&);

classPersona{
stringname;
stringlastname;
intage;
stringcity;

public:
Persona(stringname,stringlastname,intage,stringcity){
this->name=name;
this->lastname=lastname;
this->age=age;
this->city=city;
}

voidsetName(stringname){
this->name=name;
}

voidsumarAno(){
this->age++;
}

friendvoidwriteCsv(constvector<Persona*>&,conststring&);
friendvector<Persona*>readCsv(conststring&);

friendostream&operator<<(ostream&,constPersona&);
};

intmain(){
vector<Persona*>personas;
personas.push_back(newPersona("Juan","Perez",21,"Lima"));
personas.push_back(newPersona("Jose","Feliciano",20,"Arequipa"));
personas.push_back(newPersona("Andrea","Gonzales",30,"Lima"));
personas.push_back(newPersona("Alonso","Barrios",25,"Piura"));

writeCsv(personas,"data.csv");

for(auto&persona:personas){
deletepersona;
}

autonuevasPersonas=readCsv("data.csv");

for(auto&persona:nuevasPersonas){
persona->setName("Fiestas");
persona->sumarAno();
}

writeCsv(nuevasPersonas,"data2.csv");

for(auto&persona:nuevasPersonas){
cout<<*persona<<endl;
}

for(auto&persona:nuevasPersonas){
deletepersona;
}

return0;
}

voidwriteCsv(constvector<Persona*>&personas,conststring&filename){
fstreamfile(filename,ios::out);

for(auto&persona:personas){
file<<persona->name<<","<<persona->lastname<<","<<persona->age<<","<<persona->city<<endl;
}

file.close();
}

vector<Persona*>readCsv(conststring&filename){
vector<Persona*>personas;

fstreamfile(filename,ios::in);

stringline;

while(getline(file,line)){
autoitems=split(line,',');

personas.push_back(newPersona(items[0],items[1],stoi(items[2]),items[3]));
}

file.close();

returnpersonas;
}

vector<string>split(conststring&line,constchar&sep=','){
vector<string>items;

stringword="";

for(constauto&letter:line){
if(letter==sep){
items.push_back(word);
word="";
}else{
word+=letter;
}
}

items.push_back(word);

returnitems;
}

ostream&operator<<(ostream&out,constPersona&p){
out<<"Nombre:"<<p.name<<"-Apellido:"<<p.lastname<<"-"<<p.age<<"-"<<p.city;

returnout;
}
